[{"body":"Before You Begin    Determine your development environment: You can choose to develop your child theme on your local computer or in a hosted environment that’s running WordPress. When developing on a local computer, Critical CSS and REST API warnings might appear, depending on your configuration. See the SSL certificate item below for more information.\n  Check your WordPress and PHP versions: To install Trellis, you must be using WordPress 5.2 or higher and have PHP 7.2 installed.\n  (Optional for development) Install an SSL certificate: An SSL certificate allows Trellis to create optimized CSS files for faster performance. If you don’t have an SSL certificate installed, you’ll see a Critical CSS error in the WP Dashboard and in Trellis Settings. You can ignore this warning while developing your child theme.\n  Purchase a License: Go to the Mediavine Marketplace to purchase a Trellis license and download the installation files.\n    Install the Trellis Theme Framework  In the WordPress Admin Dashboard, go to Appearance \u003e Themes. Click Add New. Click Upload Theme. Click Choose File and select the Mediavine-Trellis ZIP file. Click Install Now. Click Activate.  Trellis is now running on your WordPress site. The Trellis Core minimally-styled templates will be used to display content.\nActivate Your Trellis License   In the WordPress Admin Dashboard, go to Appearance \u003e Mediavine Trellis.\n  Click License.\n  Enter your Trellis license in the License Code box.\n  Click Activate License.\n  You now have access to all of the Trellis Theme Framework features.\nNote If you’ve installed Trellis on an existing site with posts and images, it’s a good idea to set your Featured Image Size to match your new theme. Click Display and go to the Featured Image Size option and select the ratio you’d like to use. Then click the Regenerate Featured Images button. This will instruct WordPress to recreate your featured images on posts using the ratio you selected. See How to Regenerate Your Image Sizes in the Trellis Help Center for more information.  (Optional) Install the Trellis Images Plugin Trellis Images is a helper plugin that automatically creates a WebP version of legacy image formats and stores it in your site’s uploads folder (the original image is never altered or removed). WebP images load faster and score higher in Google’s Core Web Vitals. If you plan on using a different plugin that generates WebP images, you don’t need to install Trellis Images. Learn more about WebP images.\n In the WordPress Admin Dashboard, go to Plugins \u003e Add New. Click Upload Plugin. Click Choose File and select the Trellis Images plugin. Click Install Now. Click Activate Plugin.  (Optional) Install the Trellis Child Themes Trellis comes with three child themes: Bamboo, Birch, and Wisteria, each available as a separate installation file. When developing a new child theme, it can be useful to refer to these Mediavine-built themes to see how different Trellis features are implemented.\nNote You don’t need to install or activate a child theme to see Trellis at work. Trellis Core comes with minimally-styled templates that will show you all the options that are available. Some of the included child themes will not show all options in the Trellis Mediavine Dashboard or may include functionality specifically coded for that theme.   Click Add New. Click Upload Theme. Click Choose File and select a Trellis child theme ZIP file. Click Install Now. Click Activate.  What’s Next?  Learn about Trellis’ Changes to WordPress Get to know the available options in Trellis Settings Get started creating a Trellis child theme  ","categories":"","description":"Follow these steps to ensure a successful Trellis installation.\n","excerpt":"Follow these steps to ensure a successful Trellis installation.\n","ref":"/docsytrellis/getting-started/installing-trellis/","tags":"","title":"Installing Trellis"},{"body":"While you can use it right out of the box, Trellis’ real power comes from developers like you creating your own child themes. Use Trellis’ customizable and extensible code to make child themes catered to your specifications.\nWhat’s Included? When you purchase Trellis, you’ll get access to the following:\n The Trellis Core framework, which includes a starter theme with minimalistic styling and coded for speed and performance. It also includes a dashboard and enhancements to the WordPress admin bar so that publishers can fine-tune Trellis’ features for their content. Bamboo, Birch, and Wisteria child themes. These separately installed themes offer unique styles to cater to different types of content. Use them as the basis for your own child themes. Trellis Images, a helper plugin that automatically generates and swaps out legacy images for Google-friendly WebP versions.  What’s Next?  Learn more about Trellis’ Benefits See what Add-Ons come with Trellis  ","categories":"","description":"Trellis is a [WordPress theme framework](https://codex.wordpress.org/Theme_Frameworks) built with modern web technologies. It’s designed to boost site speed and optimize ad revenue and provides three custom-built child themes.\n","excerpt":"Trellis is a [WordPress theme …","ref":"/docsytrellis/overview/what-does-trellis-do/","tags":"","title":"What Does Trellis Do?"},{"body":"These controls let the publisher purge Critical CSS and JavaScript files, add Trellis-specific widgets to areas in the child theme, define the schema for posts, and adjust theme-specific styling, as well as other Trellis settings.\nAdditions to the WordPress Admin Bar When logged in, the WordPress Admin bar will contain a menu for controlling Trellis’ JavaScript and Critical CSS features and for showing the status of Critical CSS file generation.\nManage Trellis JS/CSS Menu This menu provides options for rebuilding, resetting, and purging Critical CSS files (for the entire site or for the displayed page) and for regenerating the Trellis minified Javascript file. The specific commands are explained in the table below.\nNote The Manage Trellis JS/CSS menu will show different commands depending on if you are viewing a page or are in an admin dashboard (refer to the table below). The Critical CSS Status will only appear if you are viewing a page or post on your site.     Command Description     Purge All Critical CSS Sends a request to the Trellis Services API to rebuild the optimized CSS files for the entire site, but removes existing optimized CSS files. No optimized CSS will be served until replacement CSS files have been rebuilt. This option is useful for troubleshooting if you have a display issue appearing on your site, as removing the optimized CSS will use the site’s original CSS files for display.\nThis command is always available.   Purge Page CSS Same as Purge All Critical CSS but for the current page. This command is only available when viewing a page on your site.   Rebuild Minified JS Sends a request to the Trellis Services API to rebuild the minified JavaScript files for the entire site.\nThis command is always available.    For a more detailed explanation of the menu options, see Critical CSS in the Admin bar in the Trellis Help Center.\nCritical CSS Status When viewing pages on your site, a Critical CSS Status bar shows where Trellis is in the Critical CSS file generation process. One of the statuses in the table below will be displayed.\n   Status Description     Disabled Critical CSS generation has been disabled for the post or page.   Error The page encountered an error while generating the Critical CSS files. Email trellis@mediavine.com for help resolving the issue.   None The page has not attempted to generate Critical CSS yet. As of Trellis 0.16.0, a page in the Pending or Processing status will switch to None if it doesn’t receive a response from the Trellis API after two hours.   Pending The page has been queued for regeneration of Critical CSS.   Processing The page is currently in the process of generating Critical CSS files. A request has been sent to the Trellis API, but the files haven’t been saved to the site yet.   Success The page successfully generated Critical CSS files.    Trellis Widgets Trellis adds two new widgets to WordPress: a Mediavine Sidebar Ad Hint widget and an About Widget.\n   Widget Description     About Widget A WordPress legacy widget that displays general information about the site. Publishers can add a Title, Description, and Image.   Mediavine Sidebar Ad Hint Used for sites that display Mediavine ads. The widget controls the placement of Mediavine top sidebar ads and whether they are shown on mobile devices. For more information, see How to Move Your First Sidebar Ad in the Trellis Help Center.    Trellis Settings on the Posts/Pages Editing Screen When editing posts or pages, Trellis Settings let publishers configure individual features. In the Gutenberg editor, a new menu is added to the top toolbar. In the Classic editor, a block is shown below the content. Different options are available depending on whether the content is a post or a page.\nGutenberg Editor (Post Settings)\nClassic Editor (Post Settings)\nAvailable Settings for Posts    Setting Description     Disable on Home/RSS Feed Hides the post from the Home page and RSS feed.   Schema Type Defines the schema type of the post for SEO purposes. Options include Article, NewsArticle, and BlogPosting.   Disable Critical CSS Disables the Critical CSS feature for the post. Useful if the publisher is seeing conflicts or display issues with Critical CSS on an individual post.    Available Settings for Pages    Setting Description     Disable Critical CSS Disables the Critical CSS feature for the page. Useful if the publisher is seeing conflicts or display issues with Critical CSS on an individual page.   Hide the Home Page Title Hides the page title when set as a static home page for the site.    Mediavine Trellis Dashboard Trellis adds a Mediavine Trellis submenu to the WordPress Appearance menu. This dashboard lets publishers and developers set theme options, add a license, and control overall Trellis behavior.\nMore information is available on the Trellis Settings page, which discusses each setting and how to integrate it into Trellis child themes.\nWhat’s Next?  Get to know the available options in Trellis Settings Get started creating a Trellis child theme  ","categories":"","description":"When Trellis is activated, additional controls are added to different parts of the WordPress interface.\n","excerpt":"When Trellis is activated, additional controls are added to different …","ref":"/docsytrellis/getting-started/changes-to-wordpress/","tags":"","title":"Changes to WordPress"},{"body":"Trellis and its helper plugins can replace image generators, HTML/CSS/JavaScript optimizers, and other WordPress plugins (or it can work beside some of your favorite ones). You can refer to our Conflicts and Compatibilities article for detailed information. Here’s a summary of Trellis’ main features:\nFor Publishers  Better Core Web Vitals metrics: Trellis automates key components to raise a site’s Core Web Vitals scores. First Input Delay (FID), Cumulative Layout Shift (CLS), and Largest Contentful Paint (LCP) measurements all improve when using Trellis. Better Core Web Vitals metrics boost a site’s ranking with Google. Image size optimization: Trellis tells WordPress to generate additional image sizes that are more commonly used. Properly sized images load faster, look better, and reduce warnings in Google Page Insights. Built-in Mediavine ad integration: Functions in Trellis automate the placement and sizing of Mediavine ads. A Mediavine Sidebar Ad widget lets publishers utilize the upper sidebar ad unit, and Trellis also provides a default HTML structure for optimal desktop and sidebar ad display. Progressive Web App (PWA) support: Trellis includes the necessary pieces to offer a PWA to visitors. Sites can be installed like an app on a mobile or desktop device without a publisher paying for native app development.  For Developers  Optimized CSS: Trellis’ Critical CSS feature creates two separate, optimized CSS files: one for initial viewport content, and another for the rest. When a reader visits a page, Trellis serves the initial viewport stylesheet first—the other is loaded after, resulting in faster page rendering. Learn more about Critical CSS in our Advanced Topics section or in our Working with Critical CSS Help Center article. Service worker integration: Trellis uses service workers to cache assets in the browser, reducing the need for network round trips. Better SEO with JSON-LD: Trellis generates structured data for search engines in the JSON-LD format (preferred by Google). This improves page indexing and supports displaying rich snippets in search results. JavaScript enhancements: Trellis minifies JavaScript files and defers loading asynchronously. This prevents render blocking and serves up pages faster. Template caching: Trellis caches paths to template files, providing an immediate performance boost. No need for WordPress to do repeated template lookups. REST API-based comments: When using Trellis Comments, only the first five will initially render. Additional comments appear when the user scrolls to the comments section. Font localization: Trellis localizes specific Google Fonts. This speeds up font loading in the browser and keeps site visitor data from being sent to the Google Fonts API. Lazy-loaded images: Trellis lazy loads all images and iframes even for browsers that don’t natively support it.  What’s Next?  See what Add-Ons come with Trellis Get started creating a Trellis child theme Implement Trellis’ features in your own code in the Advanced Topics section  ","categories":"","description":"Improve Core Web Vitals metrics, offer Progressive Web Apps (PWAs), and more when you use Trellis as your theme framework.\n","excerpt":"Improve Core Web Vitals metrics, offer Progressive Web Apps (PWAs), …","ref":"/docsytrellis/overview/trellis-benefits/","tags":"","title":"Trellis Benefits"},{"body":"Trellis Images Automatically create WebP versions of your existing legacy images and swap them out on-the-fly. When a user visits a post that includes a legacy image, Trellis Images passes it on to Mediavine’s image processing service (included free in your Trellis purchase). When done, a WebP version of the image is sent back to your site and stored in the uploads directory (the original image is never altered or removed).\nThe next time a visitor lands on the page, they’ll be served the WebP version instead. WebP lossless images are smaller than equivalent PNGs and JPEGs, and are preferred by Google. See the WebP site for more information.\nNote Trellis Images is an optional plugin included with your purchase. If you already create WebP images as part of your workflow (or prefer a different plugin), you don’t need to install Trellis Images.  What’s Next?  Get started creating a Trellis child theme Implement Trellis’ features in your own code in the Advanced Topics section  ","categories":"","description":"When you purchase Trellis, you’ll also get add-ons that can replace existing plugins on your site or help optimize performance.\n","excerpt":"When you purchase Trellis, you’ll also get add-ons that can replace …","ref":"/docsytrellis/overview/add-ons/","tags":"","title":"Add-Ons"},{"body":"The Mediavine Trellis Dashboard provides settings that the publisher can change to alter a theme’s behavior or perform Trellis maintenance functions. Not all settings may be available in a child theme. Some require the theme developer to specifically add support.\nAlso, if you choose to create new or additional templates (or create an entirely new CSS stylesheet), it’s up to you to connect the Trellis Dashboard settings to elements in your theme.\nUsing Settings in a Child Theme The Usage column in the table below describes how a setting is incorporated into a child theme. Some settings are enabled via WordPress’ theme support function; some are accessed via CSS variables; others require adding code to child theme templates. Some require a combination of these methods.\nWhile it’s possible to read the settings programmatically (and then perform an action on them), this page focuses on how the settings are incorporated in the Trellis Core templates.\nTheme Support When enabling a feature via WordPress’ theme support function, use the following code in the child theme’s functions.php file, at the end of the mv_trellis_child_set_options() function:\nadd_theme_support('parameter');  Note If multiple settings use the same theme support parameter, all of those settings will become visible in the Mediavine Trellis Dashboard when enabled.  For example, if adding support for the Background Accent Color setting, the code would look similar to:\nfunction mv_trellis_child_set_options() { $child_version = '0.0.1'; \\Mediavine\\Trellis\\Options::set_multiple( [ 'child_name' =\u003e '\u003ctrellis-child-theme-name\u003e', 'child_version' =\u003e $child_version, 'child_css' =\u003e get_stylesheet_directory_uri() . \"/assets/index.$child_version.css\", 'child_js' =\u003e get_stylesheet_directory_uri() . \"/assets/index.$child_version.js\", ] ); /** add theme support for background accent color */ add_theme_support('mv_trellis_background_accent_color'); } Multiple add_theme_support() methods can be added to the function.\nUsing Trellis CSS Variables Trellis’ default CSS stylesheet incorporates all the settings shown in the table. If you want to make use of a setting color or font in a different part of your theme, you’ll need to reference a Trellis CSS variable.\nWarning Do not redeclare any Trellis CSS variables. Doing so will break Trellis functionality.  The syntax to use a CSS variable is:\nvar(--trellis-variable-name, #optional-fallback-value\u003e) For example, if using the Trellis Primary color as the background for a div element (with a fallback value of white), you would use:\ndiv { background-color: var(--mv-trellis-color-primary, #ffffff); } Adding Code to Templates Some settings will reference functions or code that needs to be included in a template. Refer to the function, hook, filter, or named Trellis Core templates to see how they’re used.\nDisplay Settings Font Sizes and Typefaces    Setting Description Usage     Change Font Size Sets the font size for the body element. CSS variable: --mv-trellis-font-size   H1 Font Size Sets the default size for H1 headings. Add theme support and use a CSS variable.\nTheme support parameter: mv_trellis_headings_control CSS variable:\n--mv-trellis-h1-font-size   Apply H1 Size to All Headings Adjusts the sizes of H2 through H6 elements based on the H1 size. The following conversions are used: h2 = h1 * 0.75rem h3 = h1 * 0.67rem h4 = h1 * 0.63rem h5 = h1 * 0.56rem h6 = h1 * 0.5rem Theme support parameter: mv_trellis_headings_control CSS variable:\n--mv-trellis-h2-font-size --mv-trellis-h3-font-size --mv-trellis-h4-font-size --mv-trellis-h5-font-size --mv-trellis-h6-font-size   Body Font Sets the font of the body element. Select a Web Safe font for best performance. See Font Localization in Advanced Topics for more information. CSS variable: —-mv-trellis-font-body   Heading Font Sets the font for all headings. Select a Web Safe font for best performance. See Font Localization in Advanced Topics for more information. CSS variable: —-mv-trellis-font-heading    Colors    Setting Description Usage     Primary Color Sets a main color for use in child themes. Trellis defaults to using this color for links, buttons, and other elements in the Trellis Core theme and in Birch, Wisteria, and Bamboo. CSS variable:\n--mv-trellis-color-primary   Secondary Color Sets an alternate color for use in child themes. Trellis defaults to using this color for hover effects, alternate buttons, and other secondary elements in the Trellis Core theme and in Birch, Wisteria, and Bamboo. CSS variable: --mv-trellis-color-secondary   Background Accent Color Sets the background color of some elements like page and post headers in the Trellis Core theme and in Birch and Wisteria. This setting is not used in the Bamboo child theme. Add theme support and use a CSS variable. Theme support parameter: mv_trellis_background_accent_color CSS variable: --mv-trellis-color-background-accent   H1 Color Sets the color of all H1 headings in the Trellis Core theme and Bamboo. This setting is not used in the Wisteria and Birch child themes. Add theme support and use a CSS variable. Theme support parameter: mv_trellis_headings_control CSS variable: --mv-trellis-h1-font-color   Apply H1 Color to All Headings Sets the color of all H2 to H6 elements to match the H1 color setting in the Trellis Core theme and Bamboo. This setting is not used in the Wisteria and Birch child themes. Add theme support and use a CSS variable. Theme support parameter: mv_trellis_headings_control CSS variable: --mv-trellis-heading-font-color    Post Meta    Setting Description Usage     Post Meta Display - Top Select which post meta to display in the post header. Options include: Comment Count, Author, Date, and Categories. If Yoast SEO is installed, you can show Yoast breadcrumbs. Refer to the article-meta-header template part in Trellis Core to see how this is implemented.   Post Meta Display - Bottom Select which post meta to display in the post footer. Options include: Author, Date, and Categories. If Yoast SEO is installed, you can show Yoast breadcrumbs. Refer to the article-meta-footer template part in Trellis Core to see how this is implemented.   Post Meta Date Display Determine the date to display in the post header. Options include: Display Modified, Display Published, or Display Both. Created by the mv_trellis_entry_date() function. Refer to the article-meta-header or article-meta-footer template parts in Trellis Core for reference.    Images    Setting Description Usage     Site Logo Sets an image for use as a logo in the site header. If there is no site logo, the site title will be shown. In the Trellis Core theme and Bamboo and Birch, the logo will display inline with the main navigation. In Wisteria, the logo will display next to the sticky post on the homepage, and inline with the main navigation on posts and pages. Created by the mv_trellis_site_title() function. See Hooks for more information.   Change logo height Sets the max logo height value that can be shown in the header. CSS variable: --mv-trellis-max-logo-size   Display Featured Images Shows featured images on posts before the post content. See content-article template part in Trellis Core for reference.   Hide Featured Image from Small Screens Hides the post featured image when the visitor is using a device with a viewport width smaller than 600px. Displaying featured images to mobile devices impacts the Largest Contentful Paint (LCP) score, one of Google’s Core Web Vitals. Adds a hide-featured-image-on-mobile class to the body tag when post featured images are enabled but hidden on mobile.   Featured Image Size Sets the thumbnail size used for post thumbnails. Also controls the additional image sizes Trellis instructs WordPress Core to create. See Image Generation in Advanced Topics for more information. Controlled by the Mediavine Trellis Dashboard.    Footer    Setting Description Usage     Hide Mediavine/Trellis footer links Removes the Mediavine/Trellis footer links. Controlled by the mvt_footer_bottom() function. See Hooks for more information.   Footer Copyright Text Adds personalized copyright text to the footer. Supports HTML markup, including links. Controlled by the mvt_footer_bottom() function. See Hooks for more information.    Layout    Setting Description Usage     Enable Search Bar Adds a search bar to the site header. See header template part in Trellis Core for reference.   Layout space Adjusts the margins between key layout elements like the primary content, sidebar, and widgets. The following defaults are used: Compact = 10px Comfortable = 20px CSS Variable: --mv-trellis-gutter   Enable Trellis comments Sets Trellis as the commenting engine for the site. See Trellis Comments in Advanced Topics for more information. Note: If you are using an additional third party comment tool, deactivating Trellis Comments may be necessary for compatibility. See comments template in Trellis Core for reference.    Advanced Settings Critical CSS    Setting Description Usage     Enable Critical CSS Improves your site’s performance by separating CSS into two cached files. See Critical CSS in Advanced Topics for more information. Controlled by the Mediavine Trellis Dashboard.   CSS Allowlist Allows CSS styling for HTML elements that are rendered after page load. This is a compatibility setting for selectors that are added via JavaScript after the page loads. See Critical CSS in Advanced Topics for more information. Selectors can be added programmatically via mv_trellis_css_allowlist. See Filters for more information.   Force Critical CSS Adds selectors to the initial Critical CSS file. This is a compatibility setting for selectors that are not part of the initial viewport of a page. Some styles may be necessary to add to prevent layout shift or a flash of unstyled content at page load. See Critical CSS in Advanced Topics for more information. Selectors can be added programmatically via mv_trellis_css_force_keep. See Filters for more information.    Google Analytics    Setting Description Usage     Universal Analytics Tracking ID The legacy Google Analytics UA Tracking ID. See Tracking ID and property number in the Trellis Help Center for more information. Controlled by the Mediavine Trellis Dashboard. Inserted within the \u003chead\u003e element.   Google Analytics 4 Tracking ID The newer Google Analytics 4 (GA4) Tracking ID. See Introducing Google Analytics 4 (GA4) in the Trellis Help Center for more information. Controlled by the Mediavine Trellis Dashboard. Inserted within the \u003chead\u003e element.   Delay Google Analytics Load Forces a three second delay to the initial Google Analytics load. While visitors who leave your site within that time will not be tracked, site performance will improve. Controlled by the Mediavine Trellis Dashboard.    SEO    Setting Description Usage     Trellis SEO Output Enables meta descriptions, schema output (via JSON-LD), and Open Graph tags for your site. Note: This option is disabled if Trellis detects Yoast, RankMath, or AIO as installed and active. It cannot be turned on while these plugins are active. For all other SEO plugins, disable this to prevent duplicate SEO data. Controlled by the Mediavine Trellis Dashboard.    Optimization    Setting Description Usage     JavaScript Optimization Enables minification of JavaScript files and defers loading for better performance. Note: If Trellis detects another plugin is performing JavaScript optimizations, it will disable its own optimization functions. Recognized plugins include Autoptimize, Clearfy Cache, Jetpack, Litespeed Cache, NitroPack, SG Optimizer, W3 Total Cache, WP Fastest Cache, and WP Rocket. Controlled by the Mediavine Trellis Dashboard.   JavaScript Exclusions Matching full or partial URLs in this list are excluded from any deferment or minification performed by Trellis. Note: This setting is only visible when JavaScript Optimization is enabled. Controlled by the Mediavine Trellis Dashboard.    Permanent Actions    Setting Description Usage     Reset Settings Sets the theme back to default settings (except for the license field). Warning: This cannot be undone. Controlled by the Mediavine Trellis Dashboard.   Trellis Cache Clears the Trellis cache. Use if new Trellis features or settings are not appearing. Warning: This cannot be undone. Controlled by the Mediavine Trellis Dashboard.   Regenerate Images Regenerates all image sizes on your site. This is used if images other than your featured images are displaying at the wrong size. See How to Regenerate Your Image Sizes in the Trellis Help Center for more information. Controlled by the Mediavine Trellis Dashboard.    PWA Settings    Setting Description Usage     Enable PWA Enables PWA support for your site. If enabled, it allows users to view your blog as a progressive web app on their desktop or mobile device. Controlled by the Mediavine Trellis Dashboard.   PWA Short Name Sets the display name of the app on the installed device. Note: A PWA Short Name is required for this feature to operate. Controlled by the Mediavine Trellis Dashboard.   Theme Color Sets the color of the URL bar on supported devices to match your site style. Controlled by the Mediavine Trellis Dashboard.   PWA Site Icon Sets the image for use as the PWA icon. Note: A PWA Site Icon is required for this feature to operate. Controlled by the Mediavine Trellis Dashboard.    License Settings    Setting Description Usage     Trellis License Unlocks Trellis’ full features. Visit the Mediavine Marketplace to purchase a license. Controlled by the Mediavine Trellis Dashboard.    Hooks Settings    Setting Description Usage     Add custom HTML code to the \u003chead\u003e tag Useful for Google Site verification HTML meta tags or a Pinterest domain verification HTML tag. See Trellis Hooks Settings Overview in the Trellis Help Center for more information. Controlled by the Mediavine Trellis Dashboard. Added via mvt_header_bottom() in templates to tha_head_bottom(). See Hooks for more information.   Add custom content between the post heading and the post content Useful for anything to be displayed only on posts just before the content. Typically used for affiliate disclaimers and CTAs. See Trellis Hooks Settings Overview in the Trellis Help Center for more information. Controlled by the Mediavine Trellis Dashboard. Added via mvt_aside_before_entry_content() in templates to tha_aside_before_entry_content(). See Hooks for more information.   Add custom content after the post content Useful for anything to be displayed only on posts just after the content. Useful for CTAs. See Trellis Hooks Settings Overview in the Trellis Help Center for more information. Controlled by the Mediavine Trellis Dashboard. Added via mvt_content_after() in templates to tha_content_after(). See Hooks for more information.   Add custom HTML code to the end of the \u003cbody\u003e tag Useful for additional scripts required by external services such as newsletters or email opt-in forms. Anything added here should not be needed at the time of the First Contentful Paint (FCP). See Trellis Hooks Settings Overview in the Trellis Help Center for more information. Controlled by the Mediavine Trellis Dashboard. Added via mvt_body_bottom() in templates to tha_body_bottom(). See Hooks for more information.    What’s Next?  Get started creating a Trellis child theme Read more about Trellis Hooks Read more about Trellis Filters  ","categories":"","description":"When you activate Trellis, a new menu becomes available under Appearance in the WordPress Admin Dashboard. \n","excerpt":"When you activate Trellis, a new menu becomes available under …","ref":"/docsytrellis/getting-started/trellis-settings/","tags":"","title":"Trellis Settings"},{"body":"Placeholder text.\nWhat’s Next?  Placeholder link  ","categories":"","description":"Placeholder description. \n","excerpt":"Placeholder description. \n","ref":"/docsytrellis/getting-started/create-your-child-theme/","tags":"","title":"Creating Your Child Theme"},{"body":"Placeholder text.\nWhat’s Next?  Placeholder link  ","categories":"","description":"Placeholder description. \n","excerpt":"Placeholder description. \n","ref":"/docsytrellis/getting-started/testing-your-child-theme/","tags":"","title":"Testing Your Child Theme"},{"body":"Placeholder text.\nWhat’s Next?  Placeholder link  ","categories":"","description":"Placeholder description. \n","excerpt":"Placeholder description. \n","ref":"/docsytrellis/getting-started/troubleshooting/","tags":"","title":"Troubleshooting"},{"body":"Learn more about what Trellis is, the benefits it offers to publishers and developers, and what add-ons come with your Trellis license. Click on a page title for the details.\n","categories":"","description":"","excerpt":"Learn more about what Trellis is, the benefits it offers to publishers …","ref":"/docsytrellis/overview/","tags":"","title":"Overview"},{"body":"This section shows available filters for Trellis child theme templates. A filter summary page provides a quickly scannable list of filters that link to a more in-depth filter detail page.\n","categories":"","description":"","excerpt":"This section shows available filters for Trellis child theme …","ref":"/docsytrellis/reference/filters/","tags":"","title":"Filters"},{"body":"Placeholder text.\nWhat’s Next?  Placeholder link  ","categories":"","description":"Placeholder description. \n","excerpt":"Placeholder description. \n","ref":"/docsytrellis/reference/functions/","tags":"","title":"Functions"},{"body":"Follow the instructions on these pages to install Trellis and learn what changes it makes to the WordPress interface. You’ll also find detailed descriptions of Trellis settings and how they interact with your child theme.\n","categories":"","description":"","excerpt":"Follow the instructions on these pages to install Trellis and learn …","ref":"/docsytrellis/getting-started/","tags":"","title":"Getting Started"},{"body":"mvt_processing_css_status_timeout Sets the timeout period for the Processing state in Critical CSS.\n mvt_requires_default_wp_fields Determines whether default WordPress comment fields should be used in the comments_form call in comments.php. If Trellis Comments are enabled, WordPress comment fields are not used.\n mv_trellis_about_widget_image_height Applied to the height attribute on the About Widget IMG tag.\n mv_trellis_about_widget_image_width Applied to the width attribute on the About Widget IMG tag.\n mv_trellis_about_widget_image_size The registered size to be used for the About Widget image. This can be a Trellis image size, a WordPress image size, or a custom size.\n","categories":"","description":"An alphabetically-sorted list of available filters in Trellis, showing only the filter name and description. Click on a filter name for detailed information.\n","excerpt":"An alphabetically-sorted list of available filters in Trellis, showing …","ref":"/docsytrellis/reference/filters/filters-summary/","tags":["filters"],"title":"Filters Summary"},{"body":"This section is where the user documentation for your project lives - all the information your users need to understand and successfully use your project.\nFor large documentation sets we recommend adding content under the headings in this section, though if some or all of them don’t apply to your project feel free to remove them or add your own. You can see an example of a smaller Docsy documentation site in the Docsy User Guide, which lives in the Docsy theme repo if you’d like to copy its docs section.\nFind out how to use the Docsy theme in the Docsy User Guide. You can learn more about how to organize your documentation (and how we organized this site) in Organizing Your Content.\nWhat’s in This Section? ","categories":"","description":"","excerpt":"This section is where the user documentation for your project lives - …","ref":"/docsytrellis/advanced-topics/","tags":"","title":"Advanced Topics"},{"body":"Placeholder text.\nWhat’s Next?  Placeholder link  ","categories":"","description":"Placeholder description. \n","excerpt":"Placeholder description. \n","ref":"/docsytrellis/reference/hooks/","tags":"","title":"Hooks"},{"body":"mvt_processing_css_status_timeout Sets the timeout period for the Processing state in Critical CSS.\napply_filters( 'mvt_processing_css_status_timeout', int $value) Default\n 7200 seconds (2 hours) from current time  Arguments\n $value int The amount of time measured in seconds since the Unix Epoch (January 1 1970 00:00:00 GMT).   mvt_requires_default_wp_fields Description\nDetermines whether default WordPress comment fields should be used in the comments_form call in comments.php. If Trellis Comments are enabled, WordPress comment fields are not used.\napply_filters('mvt_requires_default_wp_fields', bool $value) Default\n False if Trellis Comments are enabled, True if Trellis Comments are disabled.  Arguments\n $value bool Whether to use default WordPress comment fields.   mv_trellis_about_widget_image_height Applied to the height attribute on the About Widget IMG tag.\napply_filters('mv_trellis_about_widget_image_height', int $height) Default\n 100  Arguments\n $height: int The height of the About Widget image in pixels.   mv_trellis_about_widget_image_width Applied to the width attribute on the About Widget IMG tag.\napply_filters( 'mv_trellis_about_widget_image_width', int $width) Default\n 100  Arguments\n $width int The width of the About Widget image in pixels. VERIFY pixels   mv_trellis_about_widget_image_size The registered size to be used for the About Widget image. This can be a Trellis image size, a WordPress image size, or a custom size.\napply_filters('mv_trellis_about_widget_image_size', string $img_size) Default\n mv_trellis_1x1_low_res  Arguments\n $img_size string The registered image size.  ","categories":"","description":"A detailed list of available filters in Trellis showing the filter name, description, syntax, default values, and arguments.\n","excerpt":"A detailed list of available filters in Trellis showing the filter …","ref":"/docsytrellis/reference/filters/filters-detail/","tags":["filters"],"title":"Filters Detail"},{"body":"Placeholder text.\nWhat’s Next?  Placeholder link  ","categories":"","description":"Placeholder description. \n","excerpt":"Placeholder description. \n","ref":"/docsytrellis/reference/visual-hooks-guide/","tags":"","title":"Visual Hooks Guide"},{"body":"This section is where the user documentation for your project lives - all the information your users need to understand and successfully use your project.\nFor large documentation sets we recommend adding content under the headings in this section, though if some or all of them don’t apply to your project feel free to remove them or add your own. You can see an example of a smaller Docsy documentation site in the Docsy User Guide, which lives in the Docsy theme repo if you’d like to copy its docs section.\nOther content such as marketing material, case studies, and community updates should live in the About and Community pages.\nFind out how to use the Docsy theme in the Docsy User Guide. You can learn more about how to organize your documentation (and how we organized this site) in Organizing Your Content.\n","categories":"","description":"","excerpt":"This section is where the user documentation for your project lives - …","ref":"/docsytrellis/faqs/","tags":"","title":"FAQ"},{"body":"This section is where the user documentation for your project lives - all the information your users need to understand and successfully use your project.\nFor large documentation sets we recommend adding content under the headings in this section, though if some or all of them don’t apply to your project feel free to remove them or add your own. You can see an example of a smaller Docsy documentation site in the Docsy User Guide, which lives in the Docsy theme repo if you’d like to copy its docs section.\nOther content such as marketing material, case studies, and community updates should live in the About and Community pages.\nFind out how to use the Docsy theme in the Docsy User Guide. You can learn more about how to organize your documentation (and how we organized this site) in Organizing Your Content.\nWhat’s in This Section? ","categories":"","description":"","excerpt":"This section is where the user documentation for your project lives - …","ref":"/docsytrellis/reference/","tags":"","title":"Reference"},{"body":"Placeholder text.\nWhat’s Next?  Placeholder link  ","categories":"","description":"Placeholder description. \n","excerpt":"Placeholder description. \n","ref":"/docsytrellis/reference/visual-markup-guide/","tags":"","title":"Visual Markup Guide"},{"body":"This section is where the user documentation for your project lives - all the information your users need to understand and successfully use your project.\nFor large documentation sets we recommend adding content under the headings in this section, though if some or all of them don’t apply to your project feel free to remove them or add your own. You can see an example of a smaller Docsy documentation site in the Docsy User Guide, which lives in the Docsy theme repo if you’d like to copy its docs section.\nOther content such as marketing material, case studies, and community updates should live in the About and Community pages.\nFind out how to use the Docsy theme in the Docsy User Guide. You can learn more about how to organize your documentation (and how we organized this site) in Organizing Your Content.\n","categories":"","description":"","excerpt":"This section is where the user documentation for your project lives - …","ref":"/docsytrellis/changelogs/","tags":"","title":"Changelogs"},{"body":"","categories":"","description":"","excerpt":"","ref":"/docsytrellis/categories/","tags":"","title":"Categories"},{"body":"","categories":"","description":"","excerpt":"","ref":"/docsytrellis/tags/docs/","tags":"","title":"docs"},{"body":"Text can be bold, italic, or strikethrough. Links should be colored with no underlines.\nThere should be whitespace between paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.\n90’s four loko seitan photo booth gochujang freegan tumeric listicle fam ugh humblebrag. Bespoke leggings gastropub, biodiesel brunch pug fashion axe meh swag art party neutra deep v chia. Enamel pin fanny pack knausgaard tofu, artisan cronut hammock meditation occupy master cleanse chartreuse lumbersexual. Kombucha kogi viral truffaut synth distillery single-origin coffee ugh slow-carb marfa selfies. Pitchfork schlitz semiotics fanny pack, ugh artisan vegan vaporware hexagon. Polaroid fixie post-ironic venmo wolf ramps kale chips.\nHeaders This is a normal paragraph following a header. Knausgaard kale chips snackwave microdosing cronut copper mug swag synth bitters letterpress glossier craft beer. Mumblecore bushwick authentic gochujang vegan chambray meditation jean shorts irony. Viral farm-to-table kale chips, pork belly palo santo distillery activated charcoal aesthetic jianbing air plant woke lomo VHS organic. Tattooed locavore succulents heirloom, small batch sriracha echo park DIY af. Shaman you probably haven’t heard of them copper mug, crucifix green juice vape single-origin coffee brunch actually. Mustache etsy vexillologist raclette authentic fam. Tousled beard humblebrag asymmetrical. I love turkey, I love my job, I love my friends, I love Chardonnay! I love this life we live in\nHeader 2 This is a normal paragraph following a header. Knausgaard kale chips snackwave microdosing cronut copper mug swag synth bitters letterpress glossier craft beer. Mumblecore bushwick authentic gochujang vegan chambray meditation jean shorts irony. Viral farm-to-table kale chips, pork belly palo santo distillery activated charcoal aesthetic jianbing air plant woke lomo VHS organic.\nOn big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.\nHeader 3 This is a code block following a header. Next level leggings before they sold out, PBR\u0026B church-key shaman echo park. Kale chips occupy godard whatever pop-up freegan pork belly selfies. Gastropub Belinda subway tile woke post-ironic seitan. Shabby chic man bun semiotics vape, chia messenger bag plaid cardigan.\nHeader 4  This is an unordered list following a header. This is an unordered list following a header. This is an unordered list following a header.  Header 5  This is an ordered list following a header. This is an ordered list following a header. This is an ordered list following a header.  Header 6    What Follows     A table A header   A table A header   A table A header    Banner This is a placeholder page. Replace it with your own content.\n Block Quote  There should be no margin above this first sentence.\nBlockquotes should be a lighter gray with a border along the left side in the secondary color.\nThere should be no margin below this final sentence.\n Callouts  This is a standard callout.  This is a plain success callout.  This is a plain warning callout.  Note This is a standard callout with a title and Markdown.  Warning This is a warning callout with a title.  Cards Imagine  Artist and songwriter: John Lennon  Co-writer: Yoko Ono  Imagine there’s no heaven, It’s easy if you try No hell below us, above us only sky Imagine all the people living for today… …    Code These are some code-formatting examples:\nCode snippets like var foo = \"bar\"; can be shown inline.\nAlso, this should vertically align with this and this.\nCode can also be shown in a block element.\nfoo := \"bar\"; bar := \"foo\"; Code can also use syntax highlighting.\napply_filters( 'mv_trellis_copyright_shortcode', string $output, array $atts ) Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. Inline code inside table cells should still be distinguishable.\n   Language Code     Javascript var foo = \"bar\";   Ruby foo = \"bar\"{    Horizontal Rule  There’s a horizontal rule above and below this.\n Images Small images should be shown at their actual size.\nLarge images should always scale down and fit in the content container.\nThe photo above of the Spruce Picea abies shoot with foliage buds: Bjørn Erik Pedersen, CC-BY-SA.\nLists Here is an unconventional list:\n Some stuff This is an alert with Markdown.   Some stuff Some stuff  Here is an unordered list:\n Liverpool F.C. Chelsea F.C. Manchester United F.C.  And an ordered list:\n Michael Brecker Seamus Blake Branford Marsalis  And an unordered task list:\n Create a Hugo theme Add task lists to it Take a vacation  And a “mixed” task list:\n Pack bags ? Travel!  And a nested list:\n Jackson 5  Michael Tito Jackie Marlon Jermaine   TMNT  Leonardo Michelangelo Donatello Raphael    Definition lists can be used with Markdown syntax. Definition headers are bold.\n Name Godzilla Born 1952 Birthplace Japan Color Green   Tables Tables should have bold headings and alternating shaded rows.\n   Default Arguments     * The HTML link to the Trellis Framework, currently https://mediavine.com/. $output string HTML output of the shortcode. $atts array List of shortcode attributes.       Artist Album Year     Michael Jackson Thriller 1982   Prince Purple Rain 1984   Beastie Boys License to Ill 1986       Artist Album Year Label Awards Songs     Michael Jackson Thriller 1982 Epic Records Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical Wanna Be Startin' Somethin', Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life   Prince Purple Rain 1984 Warner Brothers Records Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal Let’s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I’m a Star, Purple Rain   Beastie Boys License to Ill 1986 Mercury Records noawardsbutthistablecelliswide Rhymin \u0026 Stealin, The New Style, She’s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill     Code snippets like var foo = \"bar\"; can be shown inline.\nAlso, this should vertically align with this and this.\nCode can also be shown in a block element.\nfoo := \"bar\"; bar := \"foo\"; Code can also use syntax highlighting.\nfunc main() { input := `var foo = \"bar\";` lexer := lexers.Get(\"javascript\") iterator, _ := lexer.Tokenise(nil, input) style := styles.Get(\"github\") formatter := html.New(html.WithLineNumbers()) var buff bytes.Buffer formatter.Format(\u0026buff, style, iterator) fmt.Println(buff.String()) } Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. ","categories":["Examples"],"description":"An optional short lead description about this content page. It can be **bold** or _italic_ and can be split over multiple paragraphs.\n","excerpt":"An optional short lead description about this content page. It can be …","ref":"/docsytrellis/advanced-topics/example-page/","tags":["test","sample","docs"],"title":"Example Page"},{"body":"","categories":"","description":"","excerpt":"","ref":"/docsytrellis/categories/examples/","tags":"","title":"Examples"},{"body":"","categories":"","description":"","excerpt":"","ref":"/docsytrellis/tags/sample/","tags":"","title":"sample"},{"body":"","categories":"","description":"","excerpt":"","ref":"/docsytrellis/tags/","tags":"","title":"Tags"},{"body":"","categories":"","description":"","excerpt":"","ref":"/docsytrellis/tags/test/","tags":"","title":"test"},{"body":"","categories":"","description":"","excerpt":"","ref":"/docsytrellis/tags/filters/","tags":"","title":"filters"},{"body":"","categories":"","description":"","excerpt":"","ref":"/docsytrellis/search/","tags":"","title":"Search Results"}]