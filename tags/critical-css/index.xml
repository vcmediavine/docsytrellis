<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mediavine Trellis – critical css</title><link>https://vcmediavine.github.io/docsytrellis/tags/critical-css/</link><description>Recent content in critical css on Mediavine Trellis</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://vcmediavine.github.io/docsytrellis/tags/critical-css/index.xml" rel="self" type="application/rss+xml"/><item><title>Advanced-Topics: Critical CSS</title><link>https://vcmediavine.github.io/docsytrellis/advanced-topics/critical-css/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vcmediavine.github.io/docsytrellis/advanced-topics/critical-css/</guid><description>
&lt;p>Critical CSS reduces load time by generating two optimized CSS files: one for content styling that appears in the initial viewport for a page, and another for content styling for the rest of the page. Trellis creates these files for each page of your WordPress site.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
In this article, a page refers to either a post or an actual page in WordPress. It’s whatever gets served to your reader when they visit your site in a browser.
&lt;/div>
&lt;h2 id="how-is-critical-css-generated">How Is Critical CSS Generated?&lt;/h2>
&lt;ol>
&lt;li>When a page is first visited by a reader, your Trellis instance submits it to the Trellis API hosted by Mediavine (access to this service is included in your license).&lt;/li>
&lt;li>The page is rendered in a browser with a 1300 x 900px viewport and its CSS stylesheet is audited.&lt;/li>
&lt;li>Any CSS styles that affect content in this viewport are saved into a minified primary Critical CSS file.&lt;/li>
&lt;li>Any CSS styles that fall outside of this viewport are saved into a minified secondary Non-Critical CSS file. CSS styles that are not referenced by elements on the page are completely left out.&lt;/li>
&lt;li>When the Critical and Non-Critical files are complete, the Trellis API notifies your Trellis instance to download them. These files are saved into your WordPress installation (specifically the /wp-content/mvt-critical/ directory).&lt;/li>
&lt;li>The next time the page is visited, the Critical and Non-Critical CSS files are served to the reader.&lt;/li>
&lt;/ol>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
The primary Critical CSS file is loaded as inline styles when the page loads. The secondary Non-Critical CSS file is loaded as an external stylesheet. This renders initial page views much more quickly, as the site includes the most important CSS (the Critical CSS styles) in the page markup.
&lt;/div>
&lt;h2 id="how-to-determine-the-critical-css-status-of-a-page">How To Determine the Critical CSS Status of a Page&lt;/h2>
&lt;p>When logged in, a Critical CSS Status will appear in the admin bar when you view a page on your site (See Changes to WordPress for more information). The status tells you where Trellis is in the Critical CSS generation process:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Status&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Disabled&lt;/td>
&lt;td>Critical CSS generation has been disabled for the post or page.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Error&lt;/td>
&lt;td>The page encountered an error while generating the Critical CSS files. See &lt;a href="https://vcmediavine.github.io/docsytrellis/getting-started/troubleshooting">Troubleshooting&lt;/a> for some steps you can take to determine the problem.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>None&lt;/td>
&lt;td>The page has not attempted to generate Critical CSS yet. As of Trellis 0.16.0, a page in the Pending or Processing status will switch to None if it doesn’t receive a response from the Trellis API after two hours.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Processing&lt;/td>
&lt;td>The page is currently in the process of generating Critical CSS files. A request has been sent to the Trellis API, but the files haven’t been saved to the site yet.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Success&lt;/td>
&lt;td>The page successfully generated Critical CSS files.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Important&lt;/h4>
When you visit a page while logged in, Trellis &lt;strong>does not&lt;/strong> submit it for Critical CSS generation. Automatic generation only happens when a reader visits the page.
&lt;/div>
&lt;h2 id="when-does-critical-css-get-refreshed">When Does Critical CSS Get Refreshed?&lt;/h2>
&lt;p>Knowing that Critical CSS files are only generated when a visitor reads a page, it’s natural to wonder when Trellis will trigger an update to those files. Here are the events that prompt Critical CSS to purge its existing files:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Event&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Automatic Updates&lt;/td>
&lt;td>Whenever Wordpress is automatically updated.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Custom functions&lt;/td>
&lt;td>The functions &lt;code>mv_trellis_purge_all_critical_css()&lt;/code> and &lt;code>mv_trellis_purge_page_critical_css()&lt;/code> will prompt a refresh of Critical CSS files. See &lt;a href="https://vcmediavine.github.io/docsytrellis/reference/functions/">Functions&lt;/a> in the Reference section for more information.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Plugin changes&lt;/td>
&lt;td>Activating or deactivating a plugin will prompt Trellis to regenerate existing Critical CSS files.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Critical CSS commands&lt;/td>
&lt;td>When logged in, the Manage Trellis JS/CSS menu on the admin bar gives you options to purge Critical CSS for the current page or all pages on the site.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Sidebar widget changes&lt;/td>
&lt;td>If you add, remove, change position, or change settings on a sidebar widget.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Switching themes&lt;/td>
&lt;td>Whenever you activate Trellis or a Trellis child theme.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>If you’ve made a significant change to your theme’s design or functionality, you may want to tell Trellis to discard all existing Critical CSS files and rebuild them from scratch. For more information on when to use Purge, please read &lt;a href="https://product-help.mediavine.com/en/articles/4964387-critical-css-in-the-admin-bar">Critical CSS in the Admin Bar&lt;/a> in the Help Center.&lt;/p>
&lt;h2 id="advanced-functionality">Advanced Functionality&lt;/h2>
&lt;p>There are instances where you might want to alter Critical CSS functionality because you intend to use your child-theme with other plugins. You might also use JavaScript to alter the styling of page elements after page load. In these scenarios, Critical CSS’ default functionality might give you unexpected results. For dynamically altered elements that appear in the initial viewport, you’ll want to consider adding their selectors to the Critical CSS file. If those elements appear outside of the initial viewport, add their selectors to the Non-Critical CSS file.&lt;/p>
&lt;h3 id="adding-css-to-the-critical-css-file">Adding CSS to the Critical CSS File&lt;/h3>
&lt;p>By default, if a CSS selector doesn’t match an element in the initial 1300 x 900px viewport of a page, it gets saved to that page’s Non-Critical CSS file. This might not be the desired behavior. It&amp;rsquo;s possible that you need some styles to be present at page load to prevent a layout shift or stop a flash of unstyled content for elements close to the viewport, but not in it.&lt;/p>
&lt;p>While publishers can add CSS selectors manually to the Force Critical CSS list with the Mediavine Trellis Dashboard, you can include them programmatically by adding code to your child theme’s functions.php file.&lt;/p>
&lt;p>In the example below, selectors are added to an array. You can add full selector names or partial names if you want to match a range of selectors. An &lt;code>add_filter&lt;/code> is then used to add the matching selectors to Trellis’ Force Critical CSS list. When a page gets submitted to the Trellis API, any matching CSS selectors are added to the Critical CSS file.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Important&lt;/h4>
If you add selectors to the Force Critical CSS list, be sure to check your pages in a Google Page Speed Insights report during testing. Adding selectors to the Force Critical CSS list may cause an &amp;ldquo;Unused CSS&amp;rdquo; warning to appear if the selectors are not specific enough or only appear outside of the initial viewport.
&lt;/div>
&lt;p>&lt;strong>Example&lt;/strong>&lt;/p>
&lt;p>In the example below, a site uses WP Recipe Maker and wants all styles included in the primary Critical CSS file. Since all WP Recipe Maker styles begin with the suffix “wprm,” Trellis will add all of the matching styles.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">theme_forced_styles&lt;/span>&lt;span style="color:#111">(&lt;/span> &lt;span style="color:#111">$selectors&lt;/span> &lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#111">$selectors&lt;/span>&lt;span style="color:#111">[]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;wprm&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">$selectors&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75af00">add_filter&lt;/span>&lt;span style="color:#111">(&lt;/span> &lt;span style="color:#d88200">&amp;#39;mv_trellis_css_force_keep&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;theme_forced_styles&amp;#39;&lt;/span> &lt;span style="color:#111">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can add multiple styles to the array by using an &lt;code>array_merge()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#75af00">array_merge&lt;/span>&lt;span style="color:#111">(&lt;/span> &lt;span style="color:#111">$selectors&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">[&lt;/span> &lt;span style="color:#d88200">&amp;#39;wprm&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;blue&amp;#39;&lt;/span> &lt;span style="color:#111">]&lt;/span> &lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can also add them individually by using multiple lines:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#111">$selectors&lt;/span>&lt;span style="color:#111">[]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;wprm&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">$selectors&lt;/span>&lt;span style="color:#111">[]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;blue&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Styles added programmatically will not appear in the Mediavine Trellis Dashboard.
&lt;/div>
&lt;h3 id="adding-css-to-the-non-critical-css-file">Adding CSS to the Non-Critical CSS File&lt;/h3>
&lt;p>When creating the secondary Non-Critical CSS file, Trellis leaves out any CSS styles that don&amp;rsquo;t apply to elements on the page. This can create issues if elements are added to the page markup after the initial page load. The Trellis API does not execute JavaScript at runtime, so styles for these added elements would not be included in the Non-Critical CSS file.&lt;/p>
&lt;p>Publishers can add these style selectors manually by using the Mediavine Trellis Dashboard, but if you design your child theme to work with a third-party plugin (or are adding your own JavaScript that impacts content styling) you may want to include selectors programmatically. You do this by adding code to your child theme’s functions.php file.&lt;/p>
&lt;p>Just like with Force Critical CSS, the example below shows a custom function where selectors are added to an array. You can add full selector names or partial names if you want to match a range of selectors. An &lt;code>add_filter&lt;/code> is then used to add the matching selectors to Trellis’ Force Non-Critical CSS list. Any CSS styles that match the expression will get added to the Non-Critical CSS file.&lt;/p>
&lt;p>&lt;strong>Example&lt;/strong>&lt;/p>
&lt;p>In the example below, dynamic page elements marked with “pop-up” are styled via JavaScript after page load. Specifying “pop-up” will add all matching styles.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">theme_allowlist_styles&lt;/span>&lt;span style="color:#111">(&lt;/span> &lt;span style="color:#111">$selectors&lt;/span> &lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#111">$selectors&lt;/span>&lt;span style="color:#111">[]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;pop-up&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">$selectors&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;span style="color:#75af00">add_filter&lt;/span>&lt;span style="color:#111">(&lt;/span> &lt;span style="color:#d88200">&amp;#39;mv_trellis_css_allowlist&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;theme_allowlist_styles&amp;#39;&lt;/span> &lt;span style="color:#111">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can add multiple styles to the array by using an &lt;code>array_merge()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#75af00">array_merge&lt;/span>&lt;span style="color:#111">(&lt;/span> &lt;span style="color:#111">$selectors&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">[&lt;/span> &lt;span style="color:#d88200">&amp;#39;pop-up&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;red&amp;#39;&lt;/span> &lt;span style="color:#111">]&lt;/span> &lt;span style="color:#111">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can also add them individually by using multiple lines:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#111">$selectors&lt;/span>&lt;span style="color:#111">[]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;pop-up&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#111">$selectors&lt;/span>&lt;span style="color:#111">[]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;red&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Styles added programmatically will not appear in the Mediavine Trellis Dashboard.
&lt;/div>
&lt;h2 id="issues-with-critical-css">Issues with Critical CSS&lt;/h2>
&lt;p>If you encounter problems using Critical CSS during development, refer to &lt;a href="https://vcmediavine.github.io/docsytrellis/getting-started/troubleshooting">Troubleshooting&lt;/a>.&lt;/p></description></item><item><title>Getting-Started: Trellis Settings</title><link>https://vcmediavine.github.io/docsytrellis/getting-started/trellis-settings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vcmediavine.github.io/docsytrellis/getting-started/trellis-settings/</guid><description>
&lt;p>The Mediavine Trellis Dashboard provides settings that the publisher can change to alter a theme’s behavior or perform Trellis maintenance functions. Not all settings may be available in a child theme. Some require the theme developer to specifically add support.&lt;/p>
&lt;p>Also, if you choose to create new or additional templates (or create an entirely new CSS stylesheet), it’s up to you to connect the Trellis Dashboard settings to elements in your theme.&lt;/p>
&lt;h2 id="using-settings-in-a-child-theme">Using Settings in a Child Theme&lt;/h2>
&lt;p>The Usage column in the table below describes how a setting is incorporated into a child theme. Some settings are enabled via WordPress’ theme support function; some are accessed via CSS variables; others require adding code to child theme templates. Some require a combination of these methods.&lt;/p>
&lt;p>While it’s possible to read the settings programmatically (and then perform an action on them), this page focuses on how the settings are incorporated in the Trellis Core templates.&lt;/p>
&lt;h3 id="theme-support">Theme Support&lt;/h3>
&lt;p>When enabling a feature via WordPress’ theme support function, use the following code in the child theme’s functions.php file, at the end of the &lt;code>mv_trellis_child_set_options()&lt;/code> function:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#75af00">add_theme_support&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;parameter&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
If multiple settings use the same theme support parameter, all of those settings will become visible in the Mediavine Trellis Dashboard when enabled.
&lt;/div>
&lt;p>For example, if adding support for the Background Accent Color setting, the code would look similar to:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">mv_trellis_child_set_options&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;span style="color:#111">$child_version&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;0.0.1&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;span style="color:#75af00">\Mediavine\Trellis\Options&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#75af00">set_multiple&lt;/span>&lt;span style="color:#111">(&lt;/span>
&lt;span style="color:#111">[&lt;/span>
&lt;span style="color:#d88200">&amp;#39;child_name&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#d88200">&amp;#39;&amp;lt;trellis-child-theme-name&amp;gt;&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#d88200">&amp;#39;child_version&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#111">$child_version&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#d88200">&amp;#39;child_css&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#75af00">get_stylesheet_directory_uri&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#d88200">&amp;#34;/assets/index.&lt;/span>&lt;span style="color:#d88200">$child_version&lt;/span>&lt;span style="color:#d88200">.css&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#d88200">&amp;#39;child_js&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#75af00">get_stylesheet_directory_uri&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#d88200">&amp;#34;/assets/index.&lt;/span>&lt;span style="color:#d88200">$child_version&lt;/span>&lt;span style="color:#d88200">.js&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;span style="color:#111">]&lt;/span>
&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#d88200">/** add theme support for background accent color */&lt;/span>
&lt;span style="color:#75af00">add_theme_support&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;mv_trellis_background_accent_color&amp;#39;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;span style="color:#111">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Multiple &lt;code>add_theme_support()&lt;/code> methods can be added to the function.&lt;/p>
&lt;h3 id="using-trellis-css-variables">Using Trellis CSS Variables&lt;/h3>
&lt;p>Trellis’ default CSS stylesheet incorporates all the settings shown in the table. If you want to make use of a setting color or font in a different part of your theme, you’ll need to reference a Trellis CSS variable.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Important&lt;/h4>
Do not redeclare any Trellis CSS variables. Doing so will break Trellis functionality.
&lt;/div>
&lt;p>The syntax to use a CSS variable is:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-css" data-lang="css">&lt;span style="color:#f92672">var&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#f92672">--trellis-variable-name&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#111">#&lt;/span>&lt;span style="color:#111">optional-fallback-value&lt;/span>&lt;span style="color:#f92672">&amp;gt;)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For example, if using the Trellis Primary color as the background for a div element (with a fallback value of white), you would use:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-css" data-lang="css">&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#00a8c8">background-color&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#75af00">var&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#f92672">--&lt;/span>&lt;span style="color:#111">mv&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#111">trellis&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#00a8c8">color&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#111">primary&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#ae81ff">#ffffff&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#111">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="adding-code-to-templates">Adding Code to Templates&lt;/h3>
&lt;p>Some settings will reference functions or code that needs to be included in a template. Refer to the function, hook, filter, or named Trellis Core templates to see how they’re used.&lt;/p>
&lt;h2 id="display-settings">Display Settings&lt;/h2>
&lt;h3 id="font-sizes-and-typefaces">Font Sizes and Typefaces&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Setting&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Usage&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Change Font Size&lt;/td>
&lt;td>Sets the font size for the body element.&lt;/td>
&lt;td>CSS variable: &lt;br /> &lt;code>--mv-trellis-font-size&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>H1 Font Size&lt;/td>
&lt;td>Sets the default size for H1 headings.&lt;/td>
&lt;td>Add theme support and use a CSS variable.&lt;br />&lt;br />Theme support parameter: &lt;code>mv_trellis_headings_control&lt;/code> &lt;br />&lt;br />CSS variable:&lt;br />&lt;code>--mv-trellis-h1-font-size&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Apply H1 Size to All Headings&lt;/td>
&lt;td>Adjusts the sizes of H2 through H6 elements based on the H1 size. The following conversions are used: &lt;br />&lt;br />h2 = h1 * 0.75rem &lt;br /> h3 = h1 * 0.67rem &lt;br /> h4 = h1 * 0.63rem &lt;br /> h5 = h1 * 0.56rem &lt;br /> h6 = h1 * 0.5rem&lt;/td>
&lt;td>Theme support parameter: &lt;br /> &lt;code>mv_trellis_headings_control&lt;/code> &lt;br /> &lt;br />CSS variable:&lt;br /> &lt;code>--mv-trellis-h2-font-size&lt;/code> &lt;br /> &lt;code>--mv-trellis-h3-font-size&lt;/code> &lt;br /> &lt;code>--mv-trellis-h4-font-size&lt;/code> &lt;br /> &lt;code>--mv-trellis-h5-font-size&lt;/code> &lt;br /> &lt;code>--mv-trellis-h6-font-size&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Body Font&lt;/td>
&lt;td>Sets the font of the body element. Select a Web Safe font for best performance. See Font Localization in Advanced Topics for more information.&lt;/td>
&lt;td>CSS variable: &lt;br /> &lt;code>—-mv-trellis-font-body&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Heading Font&lt;/td>
&lt;td>Sets the font for all headings. Select a Web Safe font for best performance. See Font Localization in Advanced Topics for more information.&lt;/td>
&lt;td>CSS variable: &lt;br /> &lt;code>—-mv-trellis-font-heading&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="colors">Colors&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Setting&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Usage&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Primary Color&lt;/td>
&lt;td>Sets a main color for use in child themes. Trellis defaults to using this color for links, buttons, and other elements in the Trellis Core theme and in Birch, Wisteria, and Bamboo.&lt;/td>
&lt;td>CSS variable:&lt;br />&lt;code>--mv-trellis-color-primary&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Secondary Color&lt;/td>
&lt;td>Sets an alternate color for use in child themes. Trellis defaults to using this color for hover effects, alternate buttons, and other secondary elements in the Trellis Core theme and in Birch, Wisteria, and Bamboo.&lt;/td>
&lt;td>CSS variable: &lt;br /> &lt;code>--mv-trellis-color-secondary&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Background Accent Color&lt;/td>
&lt;td>Sets the background color of some elements like page and post headers in the Trellis Core theme and in Birch and Wisteria. &lt;br />&lt;br />This setting is not used in the Bamboo child theme.&lt;/td>
&lt;td>Add theme support and use a CSS variable. &lt;br />&lt;br />Theme support parameter: &lt;br />&lt;code>mv_trellis_background_accent_color&lt;/code> &lt;br />&lt;br />CSS variable: &lt;br />&lt;code>--mv-trellis-color-background-accent&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>H1 Color&lt;/td>
&lt;td>Sets the color of all H1 headings in the Trellis Core theme and Bamboo. &lt;br />&lt;br /> This setting is not used in the Wisteria and Birch child themes.&lt;/td>
&lt;td>Add theme support and use a CSS variable. &lt;br />&lt;br /> Theme support parameter: &lt;br /> &lt;code>mv_trellis_headings_control&lt;/code> &lt;br />&lt;br /> CSS variable: &lt;br /> &lt;code>--mv-trellis-h1-font-color&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Apply H1 Color to All Headings&lt;/td>
&lt;td>Sets the color of all H2 to H6 elements to match the H1 color setting in the Trellis Core theme and Bamboo. &lt;br />&lt;br /> This setting is not used in the Wisteria and Birch child themes.&lt;/td>
&lt;td>Add theme support and use a CSS variable. &lt;br />&lt;br /> Theme support parameter: &lt;br /> &lt;code>mv_trellis_headings_control&lt;/code> &lt;br />&lt;br />CSS variable: &lt;br /> &lt;code>--mv-trellis-heading-font-color&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="post-meta">Post Meta&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Setting&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Usage&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Post Meta Display - Top&lt;/td>
&lt;td>Select which post meta to display in the post header. Options include: Comment Count, Author, Date, and Categories. &lt;br />&lt;br />If Yoast SEO is installed, you can show Yoast breadcrumbs.&lt;/td>
&lt;td>Refer to the article-meta-header template part in Trellis Core to see how this is implemented.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Post Meta Display - Bottom&lt;/td>
&lt;td>Select which post meta to display in the post footer. Options include: Author, Date, and Categories. &lt;br />&lt;br />If Yoast SEO is installed, you can show Yoast breadcrumbs.&lt;/td>
&lt;td>Refer to the article-meta-footer template part in Trellis Core to see how this is implemented.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Post Meta Date Display&lt;/td>
&lt;td>Determine the date to display in the post header. Options include: Display Modified, Display Published, or Display Both.&lt;/td>
&lt;td>Created by the &lt;code>mv_trellis_entry_date()&lt;/code> function. Refer to the article-meta-header or article-meta-footer template parts in Trellis Core for reference.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="images">Images&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Setting&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Usage&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Site Logo&lt;/td>
&lt;td>Sets an image for use as a logo in the site header. If there is no site logo, the site title will be shown. &lt;br />&lt;br /> In the Trellis Core theme and Bamboo and Birch, the logo will display inline with the main navigation. &lt;br />&lt;br />In Wisteria, the logo will display next to the sticky post on the homepage, and inline with the main navigation on posts and pages.&lt;/td>
&lt;td>Created by the &lt;code>mv_trellis_site_title()&lt;/code> function. See &lt;a href="https://vcmediavine.github.io/docsytrellis/reference/hooks/">Hooks&lt;/a> for more information.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Change logo height&lt;/td>
&lt;td>Sets the max logo height value that can be shown in the header.&lt;/td>
&lt;td>CSS variable: &lt;br /> &lt;code>--mv-trellis-max-logo-size&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Display Featured Images&lt;/td>
&lt;td>Shows featured images on posts before the post content.&lt;/td>
&lt;td>See content-article template part in Trellis Core for reference.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Hide Featured Image from Small Screens&lt;/td>
&lt;td>Hides the post featured image when the visitor is using a device with a viewport width smaller than 600px. &lt;br />&lt;br /> Displaying featured images to mobile devices impacts the Largest Contentful Paint (LCP) score, one of Google&amp;rsquo;s Core Web Vitals.&lt;/td>
&lt;td>Adds a &lt;code>hide-featured-image-on-mobile&lt;/code> class to the body tag when post featured images are enabled but hidden on mobile.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Featured Image Size&lt;/td>
&lt;td>Sets the thumbnail size used for post thumbnails. &lt;br />&lt;br /> Also controls the additional image sizes Trellis instructs WordPress Core to create. See Image Generation in Advanced Topics for more information.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="footer">Footer&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Setting&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Usage&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Hide Mediavine/Trellis footer links&lt;/td>
&lt;td>Removes the Mediavine/Trellis footer links.&lt;/td>
&lt;td>Controlled by the &lt;code>mvt_footer_bottom()&lt;/code> function. &lt;br />&lt;br />See &lt;a href="https://vcmediavine.github.io/docsytrellis/reference/hooks/">Hooks&lt;/a> for more information.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Footer Copyright Text&lt;/td>
&lt;td>Adds personalized copyright text to the footer. Supports HTML markup, including links.&lt;/td>
&lt;td>Controlled by the &lt;code>mvt_footer_bottom()&lt;/code> function. &lt;br />&lt;br />See &lt;a href="https://vcmediavine.github.io/docsytrellis/reference/hooks/">Hooks&lt;/a> for more information.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="layout">Layout&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Setting&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Usage&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Enable Search Bar&lt;/td>
&lt;td>Adds a search bar to the site header.&lt;/td>
&lt;td>See header template part in Trellis Core for reference.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Layout space&lt;/td>
&lt;td>Adjusts the margins between key layout elements like the primary content, sidebar, and widgets. The following defaults are used: &lt;br />&lt;br /> Compact = 10px &lt;br /> Comfortable = 20px&lt;/td>
&lt;td>CSS Variable: &lt;code>--mv-trellis-gutter&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Display Tag Links&lt;/td>
&lt;td>As of Trellis 0.17.0, controls if tag links are output in the &lt;code>footer.entry-footer&lt;/code> when viewing a post.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Article Navigation&lt;/td>
&lt;td>As of Trellis 0.17.0, controls whether a &lt;code>nav.post-navigation&lt;/code> tag with a link to the next or previous post is added to the bottom of a post.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Enable Trellis comments&lt;/td>
&lt;td>Sets Trellis as the commenting engine for the site. &lt;br />&lt;br /> See &lt;a href="https://vcmediavine.github.io/docsytrellis/advanced-topics/trellis-comments/">Trellis Comments&lt;/a> in Advanced Topics for more information. &lt;br /> &lt;br /> &lt;strong>Note:&lt;/strong> If you are using an additional third party comment tool, deactivating Trellis Comments may be necessary for compatibility.&lt;/td>
&lt;td>See the comments template in Trellis Core for reference.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="advanced-settings">Advanced Settings&lt;/h2>
&lt;h3 id="google-analytics">Google Analytics&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Setting&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Usage&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Universal Analytics Tracking ID&lt;/td>
&lt;td>The legacy Google Analytics UA Tracking ID. See Tracking ID and property number in the Trellis Help Center for more information.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard. Inserted within the &lt;code>&amp;lt;head&amp;gt;&lt;/code> element.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Google Analytics 4 Tracking ID&lt;/td>
&lt;td>The newer Google Analytics 4 (GA4) Tracking ID. See Introducing Google Analytics 4 (GA4) in the Trellis Help Center for more information.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard. Inserted within the &lt;code>&amp;lt;head&amp;gt;&lt;/code> element.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Delay Google Analytics Load&lt;/td>
&lt;td>Forces a three second delay to the initial Google Analytics load. While visitors who leave your site within that time will not be tracked, site performance will improve.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="seo">SEO&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Setting&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Usage&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Trellis SEO Output&lt;/td>
&lt;td>Enables meta descriptions, schema output (via JSON-LD), and Open Graph tags for your site. &lt;br />&lt;br /> &lt;strong>Note:&lt;/strong> This option is disabled if Trellis detects Yoast, RankMath, or AIO as installed and active. It cannot be turned on while these plugins are active. &lt;br />&lt;br /> For all other SEO plugins, disable this to prevent duplicate SEO data.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="optimization">Optimization&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Setting&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Usage&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>JavaScript Optimization&lt;/td>
&lt;td>Enables minification of JavaScript files and defers loading for better performance. &lt;br />&lt;br /> &lt;strong>Note:&lt;/strong> If Trellis detects another plugin is performing JavaScript optimizations, it will disable its own optimization functions. &lt;br />&lt;br /> Recognized plugins include Autoptimize, Clearfy Cache, Jetpack, Litespeed Cache, NitroPack, SG Optimizer, W3 Total Cache, WP Fastest Cache, and WP Rocket.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>JavaScript Exclusions&lt;/td>
&lt;td>Matching full or partial URLs in this list are excluded from any deferment or minification performed by Trellis. &lt;br />&lt;br /> &lt;strong>Note:&lt;/strong> This setting is only visible when JavaScript Optimization is enabled.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="permanent-actions">Permanent Actions&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Setting&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Usage&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Reset Settings&lt;/td>
&lt;td>Sets the theme back to default settings (except for the license field). &lt;br />&lt;br /> &lt;strong>Warning:&lt;/strong> This cannot be undone.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Trellis Cache&lt;/td>
&lt;td>Clears the Trellis cache. Use if new Trellis features or settings are not appearing. &lt;br />&lt;br /> &lt;strong>Warning:&lt;/strong> This cannot be undone.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Regenerate Images&lt;/td>
&lt;td>Regenerates all image sizes on your site. &lt;br />&lt;br /> This is used if images other than your featured images are displaying at the wrong size. See How to Regenerate Your Image Sizes in the Trellis Help Center for more information.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Rebuild Active Compatibility Plugins List&lt;/td>
&lt;td>Regenerates a list of active plugins that require compatibility code to work properly with Trellis. See &lt;a href="https://product-help.mediavine.com/en/articles/5046317-trellis-themes-conflicts-and-compatibilities">Trellis Themes: Conflicts and Compatibilities&lt;/a> in the Trellis Help Center for more information.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="pwa-settings">PWA Settings&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Setting&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Usage&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Enable PWA&lt;/td>
&lt;td>Enables PWA support for your site. If enabled, it allows users to view your blog as a progressive web app on their desktop or mobile device.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PWA Short Name&lt;/td>
&lt;td>Sets the display name of the app on the installed device. &lt;br />&lt;br /> &lt;strong>Note:&lt;/strong> A PWA Short Name is required for this feature to operate.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Theme Color&lt;/td>
&lt;td>Sets the color of the URL bar on supported devices to match your site style.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PWA Site Icon&lt;/td>
&lt;td>Sets the image for use as the PWA icon. &lt;br />&lt;br /> &lt;strong>Note:&lt;/strong> A PWA Site Icon is required for this feature to operate.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="license-settings">License Settings&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Setting&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Usage&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Trellis License&lt;/td>
&lt;td>Unlocks Trellis’ full features. Visit the Mediavine Marketplace to purchase a license.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="hooks-settings">Hooks Settings&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Setting&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Usage&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Add custom HTML code to the &lt;code>&amp;lt;head&amp;gt;&lt;/code> tag&lt;/td>
&lt;td>Useful for Google Site verification HTML meta tags or a Pinterest domain verification HTML tag. See &lt;a href="https://product-help.mediavine.com/en/articles/5592808-trellis-hooks-settings-overview">Trellis Hooks Settings Overview&lt;/a> in the Trellis Help Center for more information.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard. Added via &lt;code>mvt_header_bottom()&lt;/code> in templates to &lt;code>tha_head_bottom()&lt;/code>. See &lt;a href="https://vcmediavine.github.io/docsytrellis/reference/hooks/">Hooks&lt;/a> for more information.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Add custom content after the page header and menu&lt;/td>
&lt;td>As of Trellis 0.17.0, this hook is useful for anything to be displayed on pages just after the header and before the content. See &lt;a href="https://product-help.mediavine.com/en/articles/5592808-trellis-hooks-settings-overview">Trellis Hooks Settings Overview&lt;/a> in the Trellis Help Center for more information.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard. Added via &lt;code>mvt_content_before()&lt;/code> in templates to &lt;code>tha_content_before()&lt;/code>. See &lt;a href="https://vcmediavine.github.io/docsytrellis/reference/hooks/">Hooks&lt;/a> for more information.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Add custom content between the post heading and the post content&lt;/td>
&lt;td>Useful for anything to be displayed only on posts just before the content. Typically used for affiliate disclaimers and CTAs. See &lt;a href="https://product-help.mediavine.com/en/articles/5592808-trellis-hooks-settings-overview">Trellis Hooks Settings Overview&lt;/a> in the Trellis Help Center for more information.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard. Added via &lt;code>mvt_aside_before_entry_content()&lt;/code> in templates to &lt;code>tha_aside_before_entry_content()&lt;/code>. See &lt;a href="https://vcmediavine.github.io/docsytrellis/reference/hooks/">Hooks&lt;/a> for more information.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Add custom content after the post content&lt;/td>
&lt;td>Useful for anything to be displayed only on posts just after the content. Useful for CTAs. See &lt;a href="https://product-help.mediavine.com/en/articles/5592808-trellis-hooks-settings-overview">Trellis Hooks Settings Overview&lt;/a> in the Trellis Help Center for more information.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard. Added via &lt;code>mvt_content_after()&lt;/code> in templates to &lt;code>tha_content_after()&lt;/code>. See &lt;a href="https://vcmediavine.github.io/docsytrellis/reference/hooks/">Hooks&lt;/a> for more information.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Add custom HTML code to the end of the &lt;code>&amp;lt;body&amp;gt;&lt;/code> tag&lt;/td>
&lt;td>Useful for additional scripts required by external services such as newsletters or email opt-in forms. Anything added here should not be needed at the time of the First Contentful Paint (FCP). See &lt;a href="https://product-help.mediavine.com/en/articles/5592808-trellis-hooks-settings-overview">Trellis Hooks Settings Overview&lt;/a> in the Trellis Help Center for more information.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard. Added via &lt;code>mvt_body_bottom()&lt;/code> in templates to &lt;code>tha_body_bottom()&lt;/code>. See &lt;a href="https://vcmediavine.github.io/docsytrellis/reference/hooks/">Hooks&lt;/a> for more information.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="critical-css-settings">Critical CSS Settings&lt;/h2>
&lt;h3 id="settings">Settings&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Setting&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Usage&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Enable Critical CSS&lt;/td>
&lt;td>Improves your site&amp;rsquo;s performance by separating CSS into two cached files. See Critical CSS in &lt;a href="https://vcmediavine.github.io/docsytrellis/advanced-topics/">Advanced Topics&lt;/a> for more information.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Purge All Critical CSS&lt;/td>
&lt;td>Removes all Critical CSS files for the site. New Critical CSS files are added as readers visit the site. Original CSS code will be served until the Critical CSS is regenerated.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="exclusions">Exclusions&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Setting&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Usage&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Post/Page Exclusions&lt;/td>
&lt;td>As of Trellis 0.17.0, it shows all posts and pages where Critical CSS has been disabled manually in the WordPress Editor.&lt;/td>
&lt;td>Controlled by the Mediavine Trellis Dashboard.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Force Non-Critical CSS&lt;/td>
&lt;td>Allows CSS styling for HTML elements that are rendered after page load. &lt;br />&lt;br /> This is a compatibility setting for selectors that are added via JavaScript after the page loads. See Critical CSS in &lt;a href="https://vcmediavine.github.io/docsytrellis/advanced-topics/">Advanced Topics&lt;/a> for more information.&lt;/td>
&lt;td>Selectors can be added programmatically via &lt;code>mv_trellis_css_allowlist&lt;/code>. See &lt;a href="https://vcmediavine.github.io/docsytrellis/reference/filters/filters-summary/">Filters&lt;/a> for more information.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Force Critical CSS&lt;/td>
&lt;td>Adds selectors to the initial Critical CSS file. &lt;br />&lt;br /> This is a compatibility setting for selectors that are not part of the initial viewport of a page. &lt;br />&lt;br /> Some styles may be necessary to add to prevent layout shift or a flash of unstyled content at page load. See Critical CSS in &lt;a href="https://vcmediavine.github.io/docsytrellis/advanced-topics/">Advanced Topics&lt;/a> for more information.&lt;/td>
&lt;td>Selectors can be added programmatically via &lt;code>mv_trellis_css_force_keep&lt;/code>. See &lt;a href="https://vcmediavine.github.io/docsytrellis/reference/filters/filters-summary/">Filters&lt;/a> for more information.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="whats-next">What’s Next?&lt;/h2>
&lt;ul>
&lt;li>Get started &lt;a href="https://vcmediavine.github.io/docsytrellis/getting-started/creating-your-child-theme/">creating a Trellis child theme&lt;/a>&lt;/li>
&lt;li>Read more about &lt;a href="https://vcmediavine.github.io/docsytrellis/reference/hooks/">Trellis Hooks&lt;/a>&lt;/li>
&lt;li>Read more about &lt;a href="https://vcmediavine.github.io/docsytrellis/reference/filters/filters-summary/">Trellis Filters&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Getting-Started: Troubleshooting</title><link>https://vcmediavine.github.io/docsytrellis/getting-started/troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vcmediavine.github.io/docsytrellis/getting-started/troubleshooting/</guid><description>
&lt;h2 id="visitors-unable-to-see-css-changes">Visitors Unable to See CSS Changes&lt;/h2>
&lt;p>When Critical CSS is enabled, Trellis will audit the CSS files for your website and generate a Critical CSS file and a Non-Critical CSS file for each rendered page as visitors view them. These files are cached, and so visitors may not immediately see any styling changes until the Critical CSS files are regenerated.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
When you’re logged in to your site, you will always see the originally coded CSS styling for your pages. Only site visitors are ever served Critical CSS files.
&lt;/div>
&lt;h3 id="steps-to-troubleshoot">Steps to Troubleshoot&lt;/h3>
&lt;ol>
&lt;li>Log in to WordPress and see if your CSS styling is appearing on the page. Logged in users are always served the page’s original CSS files. If the styling is not appearing, you may have issues with how you’ve coded your CSS, or a different caching plugin you use might be causing the problem. Clear any other caching plugins and try again.&lt;/li>
&lt;li>While logged in, visit the page and check the Critical CSS status in the admin bar. Trellis will tell you if it is regenerating the Critical CSS files or if there was an error during processing.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>If the status is Processing, come back to the page later to see if its status has changed to Success. You can then test the page by viewing it while not logged in as an administrator. For an explanation of all Critical CSS Statuses, see Critical CSS in &lt;a href="https://vcmediavine.github.io/docsytrellis/advanced-topics/">Advanced Topics&lt;/a>.&lt;/li>
&lt;li>If the status is Success but your visitors are still not seeing the CSS changes, try a hard refresh of the page or clearing your browser cache to see if the style changes appear. If the issue persists, try deleting the Critical CSS file for the page. You can do this by logging in, visiting the page, and selecting &lt;strong>Manage Trellis JS/CSS Options &amp;gt; Purge Page CSS&lt;/strong> in the admin bar. Once the page’s Critical CSS status is Success, visit it again while not logged in.&lt;/li>
&lt;/ul>
&lt;h2 id="critical-css-errors-on-pages">Critical CSS Errors on Pages&lt;/h2>
&lt;p>The Critical CSS status in the admin bar shows an Error status if Trellis has difficulty parsing the page’s CSS files.&lt;/p>
&lt;h3 id="steps-to-troubleshoot-1">Steps to Troubleshoot&lt;/h3>
&lt;p>Run your page’s CSS through a CSS validator. It could be that something in the CSS file is causing problems. You can disable a single page’s Critical CSS by calling up the page or post for editing and doing one of the following:&lt;/p>
&lt;ul>
&lt;li>If using the Block Editor, click on the Trellis Settings icon and select &lt;strong>Disable Critical CSS&lt;/strong>. Then run the page through a CSS validator.&lt;/li>
&lt;li>If using the Classic Editor, go to the Trellis Settings pane and select &lt;strong>Disable Critical CSS&lt;/strong>. Then run the page through a CSS validator.&lt;/li>
&lt;/ul>
&lt;h2 id="rest-api-error">REST API Error&lt;/h2>
&lt;p>Trellis generates Critical CSS files by connecting to a Trellis API hosted by Mediavine. If your Trellis instance is having trouble connecting to the Trellis API, you will see an error in the Mediavine Trellis Dashboard. Critical CSS will be disabled for your entire site until the Trellis API can be reached.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Important&lt;/h4>
&lt;ul>
&lt;li>If developing or testing with Trellis on your personal workstation (using an environment such as Local or MAMP), it is normal to see a REST API error. An SSL certificate must be present and your URL public to let your Trellis instance connect to the Trellis API. Test your instance in an online environment before taking it live to ensure Trellis can connect to the Trellis API.&lt;/li>
&lt;li>If using an online staging site or sandbox, you might also encounter REST API errors since these environments might have limited access to outside services. Check the environment’s firewall policies (explained below) to make sure Trellis can connect to the Trellis API.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;h3 id="steps-to-troubleshoot-2">Steps to Troubleshoot&lt;/h3>
&lt;p>If you are working with your site online and still see a REST API error, follow these steps:&lt;/p>
&lt;ol>
&lt;li>Go to &lt;strong>Appearance &amp;gt; Mediavine Trellis &amp;gt; Advanced&lt;/strong>. Go to the Permanent Actions section and click the &lt;strong>Clear&lt;/strong> button for the Trellis Cache. It could be that something in the Trellis Cache is preventing access to the Trellis API.&lt;/li>
&lt;li>Check whether you have any bot blocking or firewall plugins loaded in your WordPress installation. Plugins such as WordFence, Titan Anti-Spam, and iThemes Security have been known to cause issues connecting with the Trellis API.
&lt;ul>
&lt;li>&lt;strong>For WordFence and Titan Anti-Spam:&lt;/strong> Set the Firewall settings to &lt;strong>Learning Mode&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>For iThemes Security:&lt;/strong> Make sure the REST API option is &lt;strong>Set to Default Access&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Check with your hosting provider to see if your server has bot blocking or firewall settings enabled. If so, provide your host with the information below and ask them to allowlist the Trellis Services API in their firewall.&lt;/li>
&lt;/ol>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Firewall Setting&lt;/th>
&lt;th>Value&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>X-MV-Trellis-Services&lt;/td>
&lt;td>trellis-services&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>User-Agent&lt;/td>
&lt;td>Trellis-Services&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="trellis-features-are-grayed-out-license-errors">Trellis Features Are Grayed Out (License Errors)&lt;/h2>
&lt;p>If you go to &lt;strong>Appearance &amp;gt; Mediavine Trellis&lt;/strong> and see that some features are grayed out, it could mean that your Trellis license is not installed, you have exceeded the number of sites allowed for your license, or your license has expired.&lt;/p>
&lt;h3 id="steps-to-troubleshoot-3">Steps to Troubleshoot&lt;/h3>
&lt;ol>
&lt;li>Go to &lt;strong>Appearance &amp;gt; Mediavine Trellis&lt;/strong> and go to the License section. You can see if your license is installed or showing any errors. If you have a license entered, click the &lt;strong>Recheck License&lt;/strong> button to force a validation.&lt;/li>
&lt;li>Your Trellis license is designed to work on just one site (unless you’ve purchase a multi-site license). This means that you may run into issues if you try to add your license to both a staging site and your live site. If you’re only developing a single site, deactivate the license from your staging site, push your site to a live server, then add your license on the live site.&lt;/li>
&lt;/ol>
&lt;h2 id="core-web-vitals-issues">Core Web Vitals Issues&lt;/h2>
&lt;p>When a Trellis site goes live, pages need to be visited by non-logged in users for the necessary optimizations to be triggered. You can do this by visiting pages in Incognito mode and then checking if their Critical CSS status is Success. You should not test site speed until Critical CSS files are generated, as they provide a big boost to site speed.&lt;/p>
&lt;h3 id="steps-to-troubleshoot-4">Steps to Troubleshoot&lt;/h3>
&lt;ol>
&lt;li>In Incognito mode in your browser, test a post (not the homepage) to give you a better idea of what your readers are experiencing. This is the best method for getting more accurate speed test results.&lt;/li>
&lt;li>Check the Critical CSS status for any pages with low scores. Make sure that the Critical CSS status is Success. See Critical CSS in &lt;a href="https://vcmediavine.github.io/docsytrellis/advanced-topics/">Advanced Topics&lt;/a> for more information on Critical CSS statuses.&lt;/li>
&lt;li>For an extensive list of troubleshooting steps, see &lt;a href="https://product-help.mediavine.com/en/articles/5392546-core-web-vitals-with-trellis">Core Web Vitals with Trellis&lt;/a> in the Help Center.&lt;/li>
&lt;/ol></description></item></channel></rss>